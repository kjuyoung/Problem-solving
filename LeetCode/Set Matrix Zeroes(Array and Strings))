Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

Example 1:

Input: matrix = [[1,1,1],[1,0,1],[1,1,1]]
Output: [[1,0,1],[0,0,0],[1,0,1]]



Example 2:

Input: matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]
Output: [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
 

Constraints:

m == matrix.length
n == matrix[0].length
1 <= m, n <= 200
-231 <= matrix[i][j] <= 231 - 1




class Solution:
    
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        
        def set_row_up(matrix: List[List[int]], row:int, col:int) -> int:
            print('row : ',row,', col : ',col)
            if not matrix:
                return 0
            if (row >= 0 and row <= l_i-1) and (col >= 0 and col <= l_j-1) and matrix[row][col] != 0:
                matrix[row][col] = '-'
                set_row_up(matrix, row+1, col)
                
        def set_row_down(matrix: List[List[int]], row:int, col:int) -> int:
            print('row : ',row,', col : ',col)
            if not matrix:
                return 0
            if (row >= 0 and row <= l_i-1) and (col >= 0 and col <= l_j-1):
                matrix[row][col] = '-'
                set_row_down(matrix, row-1, col)
        
        l_i = len(matrix)
        l_j = len(matrix[0])
        for i in range(l_i):
            for j in range(l_j):
                if matrix[i][j] == 0:
                    print('i : ',i,', j : ',j)
                    for k in range(l_j):
                        if matrix[i][k] != 0:
                            matrix[i][k] = '-'
                    set_row_up(matrix, i+1, j)
                    set_row_down(matrix, i-1, j)
                    print(matrix)
        for i in range(l_i):
            for j in range(l_j):
                if matrix[i][j] == '-':
                    matrix[i][j] = 0
                    
        print(matrix)

===================================================================


class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        m = len(matrix)
        n = len(matrix[0])
        space = 1
        if 0 in matrix[0]:
            space = 0
        for i in range(m):
            for j in range(n):
                if matrix[i][j]==0:
                    if i!=0:
                        matrix[i][0] = 0
                    matrix[0][j] = 0
        for i in range(1,m,1):
            for j in range(1,n,1):
                if matrix[i][0]==0 or matrix[0][j]==0:
                    matrix[i][j] = 0
        
        if matrix[0][0]==0:
            for i in range(m):
                matrix[i][0] = 0
        if space==0:
            for j in range(n):
                matrix[0][j] = 0
